# What is nice value::::::::::::::

Niceness scale goes from -20 to 19. The lower the no. more priority that task gets.
process priority = nice
ex.- nice -n 5 process

# Linux service management tools::::::::::::::::::::::::


| Tool                    | Description                                         | Systems Using It                                                    |
| ----------------------- | --------------------------------------------------- | ------------------------------------------------------------------- |
| `systemd` / `systemctl` | Modern service manager and init system              | Most modern distros (Ubuntu ≥ 15.04, RHEL 7+, CentOS 7+, Debian 8+) |
| `service`               | Wrapper around init scripts and systemd             | Older systems, some still use it                                    |
| `init` / SysVinit       | Traditional init system using `/etc/init.d` scripts | Very old Linux systems                                              |
| `upstart`               | Event-based replacement for `init`                  | Older Ubuntu versions (9.10–14.10)                                  |
| `rc-service`            | OpenRC command to manage services                   | Alpine Linux, Gentoo                                                |
| `chkconfig`             | Enables/disables services at boot                   | RHEL/CentOS 6 and earlier                                           |

# We use service management tools to:::::::::::::::::::::

| Task                      | Example                       |
| ------------------------- | ----------------------------- |
| ✅ Start a service         | `systemctl start nginx`       |
| ✅ Stop a service          | `systemctl stop mysql`        |
| ✅ Restart a service       | `systemctl restart sshd`      |
| ✅ Check if it's running   | `systemctl status apache2`    |
| ✅ Enable service at boot  | `systemctl enable docker`     |
| ✅ Disable service at boot | `systemctl disable firewalld` |

# Where Are They Used:::::::::::::::::::

System boot: Services like networking, time sync, logging, and firewalls are started using the service manager.

Web/Database servers: Start/stop services like Nginx, Apache, MySQL, PostgreSQL.

CI/CD pipelines: To manage services required for automated deployment or testing.

DevOps/SRE: To ensure services are monitored and restarted on failure.

Security/Hardening: Disabling unnecessary services reduces attack surface.

Containers (Docker/K8s): Even containers may run supervised processes using systemd inside.


# How systemd Works:::::::::::::::::::::::::::::

System Boot
   ↓
systemd reads /etc/systemd/system/*.service
   ↓
Starts enabled services in parallel
   ↓
Each service has a unit file (.service)
   ↓
systemctl manages services at runtime


# commands 

| Task             | systemd Command                       |
| ---------------- | ------------------------------------- |
| Start a service  | `systemctl start service`             |
| Stop a service   | `systemctl stop service`              |
| Restart          | `systemctl restart service`           |
| Status           | `systemctl status service`            |
| Enable at boot   | `systemctl enable service`            |
| Disable          | `systemctl disable service`           |
| See all services | `systemctl list-units --type=service` |

